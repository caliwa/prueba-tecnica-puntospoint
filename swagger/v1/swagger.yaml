---
openapi: 3.0.1
info:
  title: Prueba Técnica Puntospoint - Carlos González
  version: v1
paths:
  "/api/v1/analytics/most_purchased_products_by_category":
    get:
      summary: Productos más comprados por categoría
      tags:
      - Analytics
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                description: Un objeto donde cada clave es el nombre de una categoría.
                additionalProperties:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 101
                    name:
                      type: string
                      example: Producto X
                    total_quantity_sold:
                      type: integer
                      example: 150
                example:
                  Categoría A:
                    id: 101
                    name: Producto X
                    total_quantity_sold: 150
                  Categoría B:
                    id: 205
                    name: Producto Y
                    total_quantity_sold: 98
        '401':
          description: unauthorized
  "/api/v1/analytics/top_revenue_products_by_category":
    get:
      summary: Top 3 productos con más ingresos por categoría
      tags:
      - Analytics
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                description: Un objeto donde cada clave es el nombre de una categoría
                  y el valor es un array con los 3 productos top.
                additionalProperties:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 102
                      name:
                        type: string
                        example: Producto Z
                      total_revenue:
                        type: number
                        format: float
                        example: 1500.5
                example:
                  Categoría A:
                  - id: 102
                    name: Producto Z
                    total_revenue: 1500.5
                  - id: 105
                    name: Producto W
                    total_revenue: 1200.0
                  - id: 101
                    name: Producto X
                    total_revenue: 950.75
        '401':
          description: unauthorized
  "/api/v1/analytics/purchases_list":
    get:
      summary: Listado de compras con filtros
      tags:
      - Analytics
      security:
      - Bearer: []
      parameters:
      - name: purchase_date_from
        in: query
        format: date
        description: Fecha de inicio (YYYY-MM-DD)
        required: false
        schema:
          type: string
      - name: purchase_date_to
        in: query
        format: date
        description: Fecha de fin (YYYY-MM-DD)
        required: false
        schema:
          type: string
      - name: category_id
        in: query
        description: ID de la categoría para filtrar productos.
        required: false
        schema:
          type: integer
      - name: customer_id
        in: query
        description: ID del cliente (User).
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    customer_name:
                      type: string
                    purchase_date:
                      type: string
                      format: date
                    total:
                      type: number
                      format: float
                    status:
                      type: string
                    payment_method:
                      type: string
                    shipping_address:
                      type: string
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          product_name:
                            type: string
                          quantity:
                            type: integer
                          unit_price:
                            type: number
                            format: float
                          total_price:
                            type: number
                            format: float
                          discount_amount:
                            type: number
                            format: float
                          tax_amount:
                            type: number
                            format: float
        '401':
          description: unauthorized
  "/api/v1/analytics/purchase_counts_by_granularity":
    get:
      summary: Conteo de compras agrupadas por tiempo
      tags:
      - Analytics
      security:
      - Bearer: []
      parameters:
      - name: granularity
        in: query
        enum:
        - hour
        - day
        - week
        - month
        - year
        description: "Nivel de agrupación de tiempo.:\n * `hour` \n * `day` \n * `week`
          \n * `month` \n * `year` \n "
        required: true
        schema:
          type: string
      - name: purchase_date_from
        in: query
        format: date
        description: Fecha de inicio (YYYY-MM-DD)
        required: false
        schema:
          type: string
      - name: purchase_date_to
        in: query
        format: date
        description: Fecha de fin (YYYY-MM-DD)
        required: false
        schema:
          type: string
      - name: category_id
        in: query
        description: ID de la categoría para filtrar productos.
        required: false
        schema:
          type: integer
      - name: customer_id
        in: query
        description: ID del cliente (Customer).
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                description: Un objeto donde cada clave es el período de tiempo formateado
                  y el valor es el conteo de compras.
                additionalProperties:
                  type: integer
                example:
                  '2025-07-14': 22
                  '2025-07-15': 15
        '400':
          description: bad_request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: unauthorized
  "/api/v1/user/current_user":
    get:
      summary: Obtener datos del usuario autenticado
      tags:
      - User
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email:
                    type: string
                    example: user@example.com
                  type:
                    type: string
                    example: User
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - email
                - type
        '401':
          description: unauthorized
  "/signup":
    post:
      summary: Crear una nueva cuenta de usuario
      tags:
      - Authentication
      description: Registro de nuevo usuario. Acepta User o Admin como tipo.
      parameters: []
      responses:
        '200':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: Autenticado y creado correctamente
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: user@example.com
                      type:
                        type: string
                        example: Customer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 422
                      message:
                        type: string
                        example: El usuario no pudo ser creado.
        '429':
          description: Demasiadas peticiones
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Demasiadas peticiones
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password
                    password_confirmation:
                      type: string
                      example: password
                      x-nullable: true
                    type:
                      type: string
                      example: User
                      x-nullable: true
                      description: Puede ser User o Admin
                  required:
                  - email
                  - password
              required:
              - user
  "/login":
    post:
      summary: Iniciar sesión de usuario
      tags:
      - Authentication
      description: Autenticación de usuario con email y password. Retorna un token
        JWT en el header Authorization.
      parameters: []
      responses:
        '200':
          description: Login exitoso
          headers:
            Authorization:
              type: string
              description: Bearer token JWT para autenticación en futuras peticiones.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: Logueado exitosamente
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: user@example.com
                      type:
                        type: string
                        example: User
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Email or password.
        '429':
          description: Demasiadas peticiones
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Demasiadas peticiones
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: admin@example.com
                    password:
                      type: string
                      example: password
                  required:
                  - email
                  - password
              required:
              - user
  "/logout":
    delete:
      summary: Cerrar sesión de usuario
      tags:
      - Authentication
      description: Cierra la sesión del usuario actual. Requiere token JWT válido.
      security:
      - Bearer: []
      responses:
        '200':
          description: Logout exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Deslogueado exitosamente
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: No se pudo encontrar una sesión activa.
servers:
# - url: https://{defaultHost}
- url: http://{defaultHost}
  variables:
    defaultHost:
      # default: rubicon-prog.online
      default: localhost:3000
components:
  schemas:
    user_response:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - email
      - type
    user_signup_payload:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
              example: user@example.com
            password:
              type: string
              example: password
            password_confirmation:
              type: string
              example: password
            type:
              type: string
              example: User
              description: Puede ser User o Admin
          required:
          - email
          - password
          - password_confirmation
      required:
      - user
    user_login_payload:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
              example: admin@example.com
            password:
              type: string
              example: password
          required:
          - email
          - password
      required:
      - user
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Ingresa el token JWT con el prefijo Bearer. Ejemplo: "Bearer {tu_token}"'
